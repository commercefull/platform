exports.up = function(knex) {
  return knex.schema.createTable('order', t => {
    t.uuid('orderId').primary().defaultTo(knex.raw('uuid_generate_v4()'));
    t.timestamp('createdAt').notNullable().defaultTo(knex.fn.now());
    t.timestamp('updatedAt').notNullable().defaultTo(knex.fn.now());
    t.string('orderNumber', 50).notNullable().unique();
    t.uuid('customerId').references('customerId').inTable('customer');
    t.uuid('basketId').references('basketId').inTable('basket');
    t.enum('status', ['pending', 'processing', 'onHold', 'completed', 'shipped', 'delivered', 'cancelled', 'refunded', 'failed', 'paymentPending', 'paymentFailed', 'backordered']).notNullable().defaultTo('pending');
    t.enum('paymentStatus', ['pending', 'authorized', 'paid', 'partiallyPaid', 'partiallyRefunded', 'refunded', 'failed', 'voided', 'requiresAction']).notNullable().defaultTo('pending');
    t.enum('fulfillmentStatus', ['unfulfilled', 'partiallyFulfilled', 'fulfilled', 'partiallyShipped', 'shipped', 'delivered', 'restocked', 'failed', 'canceled', 'cancelled', 'pendingPickup', 'pickedUp', 'returned']).notNullable().defaultTo('unfulfilled');
    t.string('currencyCode', 3).notNullable().defaultTo('USD');
    t.decimal('subtotal', 15, 2).notNullable().defaultTo(0);
    t.decimal('discountTotal', 15, 2).notNullable().defaultTo(0);
    t.decimal('taxTotal', 15, 2).notNullable().defaultTo(0);
    t.decimal('shippingTotal', 15, 2).notNullable().defaultTo(0);
    t.decimal('handlingFee', 15, 2).notNullable().defaultTo(0);
    t.decimal('totalAmount', 15, 2).notNullable().defaultTo(0);
    t.integer('totalItems').notNullable().defaultTo(0);
    t.integer('totalQuantity').notNullable().defaultTo(0);
    t.boolean('taxExempt').notNullable().defaultTo(false);
    t.timestamp('orderDate').notNullable().defaultTo(knex.fn.now());
    t.timestamp('completedAt');
    t.timestamp('cancelledAt');
    t.timestamp('returnedAt');
    t.uuid('shippingAddressId').references('customerAddressId').inTable('customerAddress');
    t.uuid('billingAddressId').references('customerAddressId').inTable('customerAddress');
    t.jsonb('shippingAddress');
    t.jsonb('billingAddress');
    t.string('customerEmail', 255).notNullable();
    t.string('customerPhone', 50);
    t.string('customerName', 100);
    t.text('customerNotes');
    t.text('adminNotes');
    t.string('ipAddress', 45);
    t.text('userAgent');
    t.string('referralSource', 255);
    t.timestamp('estimatedDeliveryDate');
    t.boolean('hasGiftWrapping').notNullable().defaultTo(false);
    t.text('giftMessage');
    t.boolean('isGift').notNullable().defaultTo(false);
    t.boolean('isSubscriptionOrder').notNullable().defaultTo(false);
    t.uuid('parentOrderId').references('orderId').inTable('order');
    t.specificType('tags', 'text[]');
    t.jsonb('metadata').defaultTo('{}');

    t.index('orderNumber');
    t.index('customerId');
    t.index('basketId');
    t.index('status');
    t.index('paymentStatus');
    t.index('fulfillmentStatus');
    t.index('orderDate');
    t.index('shippingAddressId');
    t.index('billingAddressId');
    t.index('customerEmail');
    t.index('isSubscriptionOrder');
    t.index('parentOrderId');
    t.index('tags', null, 'gin');
  });
};

exports.down = function(knex) {
  return knex.schema.dropTable('order');
};
